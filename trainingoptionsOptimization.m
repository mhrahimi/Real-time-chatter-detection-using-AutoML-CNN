clc

imdsParam.tfFunction = @neuroevo.combinedFeatureExtractor;
imdsParam.path = util.desktopDir("Hossein\imds");
imdsParam.extension = '.jpg';

imds = imdsGenerator(imdsParam);

inParam.maxEpochs = 5;
inParam.numLabels = 5;

optParam = cell2table({4,2,4,35,50, ...
    16,113,10,189,9,191,NaN,NaN,NaN,NaN,3949,NaN,NaN,categorical("a")});
optParam.Properties.VariableNames = {'numConv','numNN','fr','c1s','c1n', ...
    'c2s','c2n','c3s','c3n','c4s','c4n','c5s','c5n','c6s','c6n','n1','n2','n3','options'};

[layers, options] = nets.HosseinNetDecom(imds.validation, inParam, optParam);


% InitialLearnRate = 0.00005;
% LearnRateDropPeriod = 1;
% LearnRateDropFactor = 0.005;
InitialLearnRate = 0.00005;
LearnRateDropPeriod = 1;
LearnRateDropFactor = 0.005;

options = trainingOptions('sgdm', ...
    'InitialLearnRate', .01, ...
    'LearnRateSchedule', 'piecewise', ...
    'Shuffle', 'once',...
    'MaxEpochs', inParam.maxEpochs, ...
    'LearnRateDropPeriod', 3, ...
    'LearnRateDropFactor', .01, ...
    'MiniBatchSize', 128, ...
    'Momentum', .9, ...
    'L2Regularization', .0005, ...
    'Verbose',1, ...
    'VerboseFrequency', 500*inParam.maxEpochs, ...
    'Plots','training-progress', ...
    'ValidationData', imds.validation);

options = trainingOptions('adam', ...
    'InitialLearnRate', InitialLearnRate, ...
    'LearnRateSchedule','piecewise', ...
    'Shuffle', 'once',...
    'MaxEpochs', inParam.maxEpochs, ...
    'LearnRateDropPeriod', LearnRateDropPeriod, ...
    'LearnRateDropFactor',LearnRateDropFactor, ...
    'Verbose', 1, ...
    'VerboseFrequency', 500*inParam.maxEpochs, ...
    'Plots','training-progress', ...
    'ValidationData', imds.validation);

[trainedNet, trainingInfo] = trainNetwork(imds.training, layers, options);








